apiVersion: apps/v1
kind: Deployment
metadata:
  name: <NAME>
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <NAME>
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: 'spring'
        vault.hashicorp.com/agent-inject-secret-properties: 'dev/data/<NAME>'
        vault.hashicorp.com/agent-inject-file-properties: "application.properties"
        vault.hashicorp.com/agent-inject-template-properties: |
          {{- with secret "dev/data/<NAME>" -}}
            {{- range $k, $v := .Data.data -}}
              {{ $k }}={{ $v }}
            {{- end -}}
          {{- end -}}
      labels:
        app: <NAME>
    spec:
      serviceAccountName: spring
      containers:
        - name: <NAME>
          image: localhost/dev/<NAME>:<TAG>
          env:
            - name: TZ
              value: Europe/Berlin
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          resources:
            limits:
              memory: "1Gi"
              cpu: "4"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080

          volumeMounts:
            - name: <NAME>-cfg
              mountPath: /app/config
            - name: cache-volume
              mountPath: /tmp
      volumes:
        - name: <NAME>-cfg
          configMap:
            name: <NAME>-cfg
        - name: cache-volume
          emptyDir:
            sizeLimit: 512Mi
---

apiVersion: v1
kind: Service
metadata:
  name: <NAME>
  namespace: dev
  labels:
    app: <NAME>
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: <NAME>
---

apiVersion: networking.istio.io/v1
kind: Gateway
metadata:
  name: <NAME>
  namespace: dev
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 443
        name: https
        protocol: HTTPS
      tls:
        credentialName: <NAME>-cert
        mode: SIMPLE
      hosts:
        - "<NAME>.vpn.rjst.de"
---

apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: <NAME>
  namespace: dev
spec:
  hosts:
    - "<NAME>.vpn.rjst.de"
  gateways:
    - <NAME>
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: <NAME>
            port:
              number: 8080

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: <NAME>-cert
  namespace: istio-system
spec:
  secretName: <NAME>-cert
  issuerRef:
    name: self-issuer
    kind: ClusterIssuer
  commonName: "<NAME>.vpn.rjst.de"
  dnsNames:
    - "<NAME>.vpn.rjst.de"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: <NAME>-cfg
  namespace: dev
data:
  application.yaml: |
    spring:
      config:
        import: file:/vault/secrets/application.properties
      datasource:
        url: jdbc:postgresql://vpn.vpn.rjst.de:5432/backend
        username: postgres
        hikari:
          minimum-idle: 1
      jpa:
        hibernate:
          ddl-auto: none
        open-in-view: false
      boot:
        admin:
          client:
            url: http://rjst-spring-boot-admin.dev.svc.cluster.local:8080
            instance:
              service-base-url: https://rjst-backend-service.vpn.rjst.de
              management-base-url: http://rjst-backend-service.dev.svc.cluster.local:8080
              name: rjst-backend-service
      ldap:
        base: dc=rjst,dc=de
        urls: ldap://vpn.vpn.rjst.de:389
        username: cn=trjstbackend,ou=tool,ou=users,dc=rjst,dc=de
        password: "123"
    security:
      pseudo-user-path: "ou=pseudo,ou=users,dc=rjst,dc=de"
      default-user-path: "ou=team,ou=users,dc=rjst,dc=de"
      tool-user: "trjstbackend"
    springdoc:
      swagger-ui:
        use-root-path: true
      api-docs:
        version: openapi_3_1
    management:
      endpoints:
        web:
          exposure:
            include: '*'
      endpoint:
        health:
          show-details: always
    server:
      error:
        include-message: always
